@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService localStorage;
<MudDialogProvider />
<MudSnackbarProvider />
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<div class="page">
    <main>
        <MudAppBar Fixed="true">
            <h1>ScrumBoard</h1>
            <MudSpacer/>
            <MudIcon Icon="@Icons.Material.Filled.DarkMode"/>
            <MudSwitch Checked="_isDarkMode" @bind-Value="_isDarkMode" CheckedChanged="() => SaveThemeToLocal()" Color="Color.Primary" Class="ma-4" T="bool"/>
        </MudAppBar>
        <article class="content px-4">
            <BlazoredToasts />
            @Body
        </article>
    </main>
</div>
@code
{
    private MudTheme _theme = new();
    private bool _isDarkMode;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var result = await localStorage.GetItemAsync<bool>("Theme");
            _isDarkMode = result;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private async Task SaveThemeToLocal()
    {
        _isDarkMode = !_isDarkMode;
        await localStorage.SetItemAsync("Theme", _isDarkMode);
    }
}
